# CMake generated Testfile for 
# Source directory: D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree
# Build directory: D:/unn/devtools-course-practice/build/modules/zarubin_mikhail_binary_tree
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(zarubin_mikhail_binary_tree_can_Run "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Run PROPERTIES  LABELS "zarubin_mikhail_binary_tree" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;7;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(zarubin_mikhail_binary_tree_can_Run "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Run PROPERTIES  LABELS "zarubin_mikhail_binary_tree" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;7;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
else()
  add_test(zarubin_mikhail_binary_tree_can_Run NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(zarubin_mikhail_binary_tree_can_Print_Help_Without_Arguments "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Print_Help_Without_Arguments PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "This is a binary tree application." _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;14;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(zarubin_mikhail_binary_tree_can_Print_Help_Without_Arguments "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Print_Help_Without_Arguments PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "This is a binary tree application." _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;14;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
else()
  add_test(zarubin_mikhail_binary_tree_can_Print_Help_Without_Arguments NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Number_Of_Arguments "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "1" "2")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Number_Of_Arguments PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "ERROR: Should be at least 4 arguments." _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;23;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Number_Of_Arguments "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "1" "2")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Number_Of_Arguments PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "ERROR: Should be at least 4 arguments." _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;23;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
else()
  add_test(zarubin_mikhail_binary_tree_can_Check_Number_Of_Arguments NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Cannot_Be_Cast_To_Int "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "b" "add" "2")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Cannot_Be_Cast_To_Int PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "ERROR: Cannot be cast to an integer!" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;31;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Cannot_Be_Cast_To_Int "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "b" "add" "2")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Cannot_Be_Cast_To_Int PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "ERROR: Cannot be cast to an integer!" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;31;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
else()
  add_test(zarubin_mikhail_binary_tree_can_Check_Cannot_Be_Cast_To_Int NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Number_Out_Of_Range "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "10000000000" "add" "2")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Number_Out_Of_Range PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "ERROR : Number out of range!" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;39;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Number_Out_Of_Range "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "10000000000" "add" "2")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Number_Out_Of_Range PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "ERROR : Number out of range!" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;39;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
else()
  add_test(zarubin_mikhail_binary_tree_can_Check_Number_Out_Of_Range NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Wrong_Operation "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "1" "frii" "2")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Wrong_Operation PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "ERROR: Wrong operation!" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;47;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Wrong_Operation "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "1" "frii" "2")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Wrong_Operation PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "ERROR: Wrong operation!" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;47;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
else()
  add_test(zarubin_mikhail_binary_tree_can_Check_Wrong_Operation NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Add "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "1" "add" "2")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Add PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "Operand 2 was added!" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;55;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Add "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "1" "add" "2")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Add PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "Operand 2 was added!" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;55;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
else()
  add_test(zarubin_mikhail_binary_tree_can_Check_Add NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Delete "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "1" "delete" "1")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Delete PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "Operand 1 was deleted!" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;63;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Delete "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "1" "delete" "1")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Delete PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "Operand 1 was deleted!" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;63;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
else()
  add_test(zarubin_mikhail_binary_tree_can_Check_Delete NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Find "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "1" "find" "1")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Find PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "Operand 1 was founded!" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;71;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Find "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "1" "find" "1")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Find PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "Operand 1 was founded!" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;71;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
else()
  add_test(zarubin_mikhail_binary_tree_can_Check_Find NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Not_Find "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "1" "find" "2")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Not_Find PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "Operand 2 not founded!" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;79;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Not_Find "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "1" "find" "2")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Not_Find PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "Operand 2 not founded!" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;79;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
else()
  add_test(zarubin_mikhail_binary_tree_can_Check_Not_Find NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Add_More_Initial_Values "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "1" "2" "3" "4" "5" "6" "7" "8" "add" "12")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Add_More_Initial_Values PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "Operand 12 was added!" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;87;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(zarubin_mikhail_binary_tree_can_Check_Add_More_Initial_Values "D:/unn/devtools-course-practice/build/bin/zarubin_mikhail_binary_tree.exe" "1" "2" "3" "4" "5" "6" "7" "8" "add" "12")
  set_tests_properties(zarubin_mikhail_binary_tree_can_Check_Add_More_Initial_Values PROPERTIES  LABELS "zarubin_mikhail_binary_tree" PASS_REGULAR_EXPRESSION "Operand 12 was added!" _BACKTRACE_TRIPLES "D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;87;add_test;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CTestTests.txt;0;;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;20;include;D:/unn/devtools-course-practice/modules/zarubin_mikhail_binary_tree/CMakeLists.txt;0;")
else()
  add_test(zarubin_mikhail_binary_tree_can_Check_Add_More_Initial_Values NOT_AVAILABLE)
endif()
subdirs("src")
subdirs("test")
subdirs("application")
